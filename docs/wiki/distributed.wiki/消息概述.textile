1、什么是消息队列？
本质是个队列，FIFO先入先出，只不过队列中存放的内容是message而已。其主要用途：不同进程Process/线程Thread之间通信。

消息是指在两个独立的系统间传递的数据，这两个系统可以是两台计算机，也可以是两个进程。
消息可以非常简单，可以是简单的字符串，也可以是保存了数据持久化的各种类型的文档集合。
队列是在消息的传输过程中的通道，是保存消息的容器，根据不同的情形，可以有先进先出，优先级队列等区别 。

2、为什么使用消息队列？
主要解决两个问题：
系统解耦：项目开始时，无法确定最终需求，不同进程间，添加一层，实现解耦，方便今后的扩展。
消息缓存：系统中，不同进程处理消息速度不同，MQ，可以实现不同Process之间的缓冲，即写入MQ的速度可以尽可能地快，而处理消息的速度可以适当调整（或快、或慢）。
提升系统可靠性：
a: 冗余：Process_B崩溃之后，数据并不会丢失，因为MQ多采用put-get-delete模式，即，仅当确认message被完成处理之后，才从MQ中移除message；
b:可恢复：MQ实现解耦，部分进程崩溃，不会拖累整个系统瘫痪，例，Process_B崩溃之后，Process_A仍可向MQ中添加message，并等待Process_B恢复；
c: 可伸缩：有较强的峰值处理能力，通常应用会有突发的访问流量上升情况，使用足够的硬件资源时刻待命，空闲时刻较长，资源浪费，而消息队列却能够平滑峰值流量，缓解系统组件的峰值压力；

提升系统可扩展性: 由于实现解耦，可以很容易调整，消息入队速率、消息处理速率、增加新的Process；单次送达,排序保证,异步通信,数据流的阶段性能定位

3、有哪些消息队列？
RabbitMQ、Redis、ZeroMQ、ActiveMQ、Jafka/Kafka等。

4、消息队列与消息总线的区别？


